name: Deploy

on:
  pull_request:
    types: [ closed ]
    branches: [ main-paused ]
  push:
    branches: [ main-paused ]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    # Only deploy if PR was merged (not just closed)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t guangfu250923:latest .

      - name: Save Docker image
        run: |
          docker save guangfu250923:latest | gzip > guangfu250923-image.tar.gz

      - name: Deploy to Server via SSH
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "guangfu250923-image.tar.gz,docker-compose.yml"
          target: "/tmp/guangfu-deploy"

      - name: Execute deployment on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            set -e

            # Navigate to deployment directory
            cd /tmp/guangfu-deploy

            # Load Docker image
            docker load < guangfu250923-image.tar.gz

            # Create app directory if not exists
            mkdir -p /opt/guangfu250923

            # Move docker-compose.yml to app directory
            cp docker-compose.yml /opt/guangfu250923/

            # Navigate to app directory
            cd /opt/guangfu250923

            # Check if .env file exists (optional warning)
            if [ ! -f .env ]; then
              echo "WARNING: .env file not found. Make sure environment variables are set correctly."
            fi

            # Stop existing containers (support both docker-compose and docker compose)
            docker compose down 2>/dev/null || docker-compose down 2>/dev/null || true

            # Start new containers
            docker compose up -d 2>/dev/null || docker-compose up -d

            # Clean up
            rm -rf /tmp/guangfu-deploy

            # Show running containers
            docker compose ps 2>/dev/null || docker-compose ps

            echo "Deployment completed successfully!"

      - name: Health Check
        run: |
          sleep 10
          # Add your health check endpoint here
          # curl -f http://${{ secrets.SERVER_HOST }}:8080/health || exit 1
          echo "Health check skipped - configure your health endpoint"
