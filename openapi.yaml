openapi: 3.0.3
info:
  title: 災害物資需求 API
  version: v1.1.0
  description: |-
    依據需求圖片實作的後端 API。提供建立物資需求、查詢需求清單、物資配送登記。
servers:
  - url: http://localhost:8080
    description: 本地開發
  - url: https://guangfu250923.pttapp.cc
    description: 線上服務 (Production)
  - url: '{protocol}://{host}:{port}'
    description: 自訂伺服器
    variables:
      protocol:
        default: http
        enum: [http, https]
      host:
        default: localhost
      port:
        default: '8080'
paths:
  /healthz:
    get:
      operationId: getHealthz
      summary: 健康檢查
      description: 用於健康檢查及存活探測 (liveness / readiness probe)，回傳 200 代表服務可用。
      responses:
        '200': { description: OK }
  /volunteer_organizations:
    get:
      operationId: listVolunteerOrgs
      summary: 取得志工招募單位清單 (分頁)
      description: 分頁列出志工或支援單位資訊，供志願服務或協調使用。
      parameters:
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 200, default: 20 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/VolunteerOrgCollection' } } } }
    post:
      operationId: createVolunteerOrg
      summary: 建立志工招募單位
      description: 新增一筆志工招募或支援單位資料。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/VolunteerOrgCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/VolunteerOrganization' } } } }
        '400': { description: 輸入錯誤 }
  /volunteer_organizations/{id}:
    get:
      operationId: getVolunteerOrg
      summary: 取得單一志工招募單位
      description: 依 UUID 取得志工招募 / 協作單位資料詳情。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/VolunteerOrganization' } } } }
        '404': { description: 找不到 }
    patch:
      operationId: patchVolunteerOrg
      summary: 更新志工招募單位 (部分欄位)
      description: 部分更新志工招募單位欄位；未提供欄位不修改，並自動更新 last_updated。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/VolunteerOrgPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/VolunteerOrganization' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
    delete:
      operationId: deleteVolunteerOrg
      summary: 刪除志工招募單位
      description: 依 ID 刪除一筆志工招募單位資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
  /shelters:
    get:
      operationId: listShelters
      summary: 取得庇護所清單 (分頁)
      description: 分頁列出庇護所資訊，支援依狀態過濾；不含詳細欄位時可快速瀏覽。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/ShelterCollection' } } } }
    post:
      operationId: createShelter
      summary: 建立庇護所
      description: 建立一筆新的庇護所（避難收容點）資料。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ShelterCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/Shelter' } } } }
        '400': { description: 輸入錯誤 }
  /shelters/{id}:
    get:
      operationId: getShelter
      summary: 取得單一庇護所
      description: 依 UUID 取得庇護所完整詳細資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/Shelter' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteShelter
      summary: 刪除庇護所
      description: 依 ID 刪除一筆庇護所資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchShelter
      summary: 更新庇護所 (部分欄位)
      description: 對庇護所進行部分欄位的差異更新 (PATCH)；只更新傳入的欄位。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ShelterPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/Shelter' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /medical_stations:
    get:
      operationId: listMedicalStations
      summary: 取得醫療站清單 (分頁)
      description: 分頁列出醫療救護或醫療支援站點，可依狀態與站點型態過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: station_type
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/MedicalStationCollection' } } } }
    post:
      operationId: createMedicalStation
      summary: 建立醫療站
      description: 新增一筆醫療站 / 醫療支援點資訊。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/MedicalStationCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/MedicalStation' } } } }
        '400': { description: 輸入錯誤 }
  /medical_stations/{id}:
    get:
      operationId: getMedicalStation
      summary: 取得單一醫療站
      description: 依 UUID 取得單一醫療站的詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/MedicalStation' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteMedicalStation
      summary: 刪除醫療站
      description: 依 ID 刪除一筆醫療站資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchMedicalStation
      summary: 更新醫療站 (部分欄位)
      description: 部分更新醫療站資料；未提供之欄位保持不變。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/MedicalStationPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/MedicalStation' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /mental_health_resources:
    get:
      operationId: listMentalHealthResources
      summary: 取得心理健康資源清單 (分頁)
      description: 分頁列出心理健康或諮商資源資料，可依狀態、服務形式、期間類型過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: duration_type
          schema: { type: string }
        - in: query
          name: service_format
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/MentalHealthResourceCollection' } } } }
    post:
      operationId: createMentalHealthResource
      summary: 建立心理健康資源
      description: 新增一筆心理健康/心理支持資源。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/MentalHealthResourceCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/MentalHealthResource' } } } }
        '400': { description: 輸入錯誤 }
  /mental_health_resources/{id}:
    get:
      operationId: getMentalHealthResource
      summary: 取得單一心理健康資源
      description: 依 UUID 取得心理健康資源詳情。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/MentalHealthResource' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteMentalHealthResource
      summary: 刪除心理健康資源
      description: 依 ID 刪除一筆心理健康資源資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchMentalHealthResource
      summary: 更新心理健康資源 (部分欄位)
      description: 部分更新心理健康資源內容，只變更傳入欄位。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/MentalHealthResourcePatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/MentalHealthResource' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /reports:
    get:
      operationId: listReports
      summary: 取得回報事件清單 (分頁)
      description: 分頁列出使用者或系統回報的事件點。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/ReportCollection' } } } }
    post:
      operationId: createReport
      summary: 建立回報事件
      description: 新增一筆事件 / 狀態回報。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ReportCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/Report' } } } }
        '400': { description: 輸入錯誤 }
  /reports/{id}:
    get:
      operationId: getReport
      summary: 取得單一回報事件
      description: 依 ID 取得事件詳情。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/Report' } } } }
        '404': { description: 找不到 }
    patch:
      operationId: patchReport
      summary: 更新回報事件 (部分欄位)
      description: 部分更新事件欄位；未提供之欄位不變。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ReportPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/Report' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /spam_results:
    get:
      operationId: listSpamResults
      summary: 取得垃圾訊息檢測結果清單 (分頁)
      description: 分頁列出 LLM 垃圾訊息檢測結果，可依 target_type、target_id、is_spam 過濾。
      parameters:
        - in: query
          name: target_type
          schema: { type: string }
          description: 目標資料類型 (如 human_resources, supplies)
        - in: query
          name: target_id
          schema: { type: string }
          description: 目標資料 ID
        - in: query
          name: is_spam
          schema: { type: string, enum: ["true", "false"] }
          description: 是否為垃圾訊息
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SpamResultCollection' } } } }
    post:
      operationId: createSpamResult
      summary: 建立垃圾訊息檢測結果
      description: 新增一筆 LLM 垃圾訊息檢測結果。validated_at 會自動設為當前時間。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SpamResultCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/SpamResult' } } } }
        '400': { description: 輸入錯誤 }
  /spam_results/{id}:
    get:
      operationId: getSpamResult
      summary: 取得單一垃圾訊息檢測結果
      description: 依 ID 取得檢測結果詳情。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SpamResult' } } } }
        '404': { description: 找不到 }
    patch:
      operationId: patchSpamResult
      summary: 更新垃圾訊息檢測結果 (部分欄位)
      description: 部分更新檢測結果欄位 (如 is_spam、judgment、target_data)；未提供之欄位不變。用於人工複審或修正。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SpamResultPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/SpamResult' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /accommodations:
    get:
      operationId: listAccommodations
      summary: 取得住宿資源清單 (分頁)
      description: 分頁列出住宿 / 安置資源，可依狀態、鄉鎮與是否有空位過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: township
          schema: { type: string }
        - in: query
          name: has_vacancy
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/AccommodationCollection' } } } }
    post:
      operationId: createAccommodation
      summary: 建立住宿資源
      description: 新增一筆住宿資源點資料。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/AccommodationCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/Accommodation' } } } }
        '400': { description: 輸入錯誤 }
  /accommodations/{id}:
    get:
      operationId: getAccommodation
      summary: 取得單一住宿資源
      description: 依 UUID 取得住宿資源詳細資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/Accommodation' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteAccommodation
      summary: 刪除住宿資源
      description: 依 ID 刪除一筆住宿資源資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchAccommodation
      summary: 更新住宿資源 (部分欄位)
      description: 部分更新住宿資源欄位；未提供欄位不改動。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/AccommodationPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/Accommodation' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /shower_stations:
    get:
      operationId: listShowerStations
      summary: 取得洗澡點清單 (分頁)
      description: 分頁列出洗澡/盥洗點資訊，可依狀態、設施型態、是否免費、是否需預約過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: facility_type
          schema: { type: string }
        - in: query
          name: is_free
          schema: { type: boolean }
        - in: query
          name: requires_appointment
          schema: { type: boolean }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/ShowerStationCollection' } } } }
    post:
      operationId: createShowerStation
      summary: 建立洗澡點
      description: 新增一筆洗澡/盥洗設施資料。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ShowerStationCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/ShowerStation' } } } }
        '400': { description: 輸入錯誤 }
  /shower_stations/{id}:
    get:
      operationId: getShowerStation
      summary: 取得單一洗澡點
      description: 依 UUID 取得洗澡點詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/ShowerStation' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteShowerStation
      summary: 刪除洗澡點
      description: 依 ID 刪除一筆洗澡/盥洗點資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchShowerStation
      summary: 更新洗澡點 (部分欄位)
      description: 部分更新洗澡點資料；僅更新提供的欄位。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/ShowerStationPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/ShowerStation' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /water_refill_stations:
    get:
      operationId: listWaterRefillStations
      summary: 取得飲用水補給站清單 (分頁)
      description: 分頁列出飲用水補給站，支援依狀態、水源類型、是否免費及是否無障礙過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: water_type
          schema: { type: string }
        - in: query
          name: is_free
          schema: { type: boolean }
        - in: query
          name: accessibility
          schema: { type: boolean }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/WaterRefillStationCollection' } } } }
    post:
      operationId: createWaterRefillStation
      summary: 建立飲用水補給站
      description: 新增一筆飲用水補給站資訊。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/WaterRefillStationCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/WaterRefillStation' } } } }
        '400': { description: 輸入錯誤 }
  /water_refill_stations/{id}:
    get:
      operationId: getWaterRefillStation
      summary: 取得單一飲用水補給站
      description: 依 UUID 取得飲用水補給站詳細資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/WaterRefillStation' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteWaterRefillStation
      summary: 刪除飲用水補給站
      description: 依 ID 刪除一筆飲用水補給站資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchWaterRefillStation
      summary: 更新飲用水補給站 (部分欄位)
      description: 部分更新飲用水補給站欄位；僅修改傳入欄位。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/WaterRefillStationPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/WaterRefillStation' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /restrooms:
    get:
      operationId: listRestrooms
      summary: 取得廁所點清單 (分頁)
      description: 分頁列出臨時或既有廁所據點，可依狀態、類型、是否免費、是否有水/照明過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: facility_type
          schema: { type: string }
        - in: query
          name: is_free
          schema: { type: boolean }
        - in: query
          name: has_water
          schema: { type: boolean }
        - in: query
          name: has_lighting
          schema: { type: boolean }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/RestroomCollection' } } } }
    post:
      operationId: createRestroom
      summary: 建立廁所點
      description: 新增一筆廁所據點資訊。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RestroomCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/Restroom' } } } }
        '400': { description: 輸入錯誤 }
  /restrooms/{id}:
    get:
      operationId: getRestroom
      summary: 取得單一廁所點
      description: 依 UUID 取得廁所據點詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/Restroom' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteRestroom
      summary: 刪除廁所點
      description: 依 ID 刪除一筆廁所點資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchRestroom
      summary: 更新廁所點 (部分欄位)
      description: 部分更新廁所據點資料；只更新提供欄位。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RestroomPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/Restroom' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /_admin/request_logs:
    get:
      operationId: listRequestLogs
      summary: 最近的請求紀錄 (管理用途)
      description: 管理用途列出近期 API 請求封包紀錄（含標頭、狀態碼、耗時），供監控與除錯；應在外層由網路層或鑑權保護。
      parameters:
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 100 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequestLogCollection' } } } }
  /human_resources:
    get:
      operationId: listHumanResources
      summary: 取得人力需求清單 (分頁)
      description: 以分頁方式列出人力需求/角色資訊，可依狀態與角色類型過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: role_status
          schema: { type: string }
        - in: query
          name: role_type
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 200, default: 20 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/HumanResourceCollection' } } } }
    post:
      operationId: createHumanResource
      summary: 建立人力需求/角色
      description: 建立一筆人力角色需求紀錄 (含需求人數與技能等資訊)。可提供 valid_pin 作為後續編輯驗證用的6碼PIN (不會在回應中回傳)；若未提供將由系統自動產生。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/HumanResourceCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/HumanResource' } } } }
        '400': { description: 輸入錯誤 }
  /human_resources/{id}:
    get:
      operationId: getHumanResource
      summary: 取得單一人力需求/角色
      description: 依 ID 取得人力角色需求詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/HumanResource' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteHumanResource
      summary: 刪除人力需求/角色
      description: 依 ID 刪除一筆人力需求/角色資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchHumanResource
      summary: 更新人力需求/角色 (部分欄位)
      description: 部分更新人力角色需求欄位，只更新傳入欄位。若此紀錄已設定過 valid_pin，必須提供同一個 PIN 才能更新除了 status, is_completed以及headcount_got 的欄位；若尚未設定且本次未提供，系統會自動產生一組 PIN 並允許此次更新。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/HumanResourcePatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/HumanResource' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /__test_turnstile:
    post:
      operationId: testTurnstile
      summary: 測試 Turnstile 驗證
      description: 前端提交 Turnstile token 以測試和後端之間的 Turnstile 串接是否成功。僅供測試用途。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cf-turnstile-response: { type: string, description: 'Turnstile 驗證回傳 token，欄位名稱需為 cf-turnstile-response' }
              required: [cf-turnstile-response]
      responses:
        '200': { description: 成功, content: { application/json: { schema: { type: object, properties: { ok: { type: boolean }, payload: { type: object } } } } } }
        '400': { description: 輸入錯誤 }
        '401': { description: 驗證失敗 }
  /supplies:
    get:
      operationId: listSupplies
      summary: 取得供應單清單 (分頁)
      description: 列出所有 supplies 供應單。
      parameters:
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
        - in: query
          name: embed
          schema:
            type: string
            enum: [all]
          description: 若設為 all，回傳集合中每個供應單的 supplies 會嵌入其全部物資項目；未指定時 supplies 為空陣列（僅佔位），需再以 GET /supplies/{id} 取得詳細。
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyCollection' } } } }
    post:
      operationId: createSupply
      summary: 建立供應單
      description: 建立一筆新的供應單；可同時附上一個第一筆物資項目 (supplies)。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SupplyCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/Supply' } } } }
        '400': { description: 輸入錯誤 }
  /supplies/{id}:
    get:
      operationId: getSupply
      summary: 取得單一供應單
      description: 依供應單 UUID 取得完整供應單資訊，並回傳其所有物資項目 (supplies 陣列，可能為空)。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/Supply' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteSupply
      summary: 刪除供應單
      description: 依 ID 刪除一筆供應單資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchSupply
      summary: 更新供應單 (部分欄位) (停用)
      description: 對供應單進行部分欄位更新；僅更新傳入的欄位 (name/address/phone/notes)。不影響其下物資項目。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SupplyPatch' }
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/Supply' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
    post:
      operationId: distributeSupplyItems
      summary: 批次配送 (累加 recieved_count)
      description: 對指定供應單底下的多個物資項目增加配送數量 (更新 recieved_count)。避免超過 total_count。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required: [id,count]
                properties:
                  id: { type: string, description: supply_item ID }
                  count: { type: integer, minimum: 1, description: 本次配送新增的數量 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { type: array, items: { $ref: '#/components/schemas/SupplyItem' } } } } }
        '400': { description: 輸入錯誤或超過需求 }
        '404': { description: 找不到 }
  /supply_items:
    get:
      operationId: listSupplyItems
      summary: 取得物資項目清單 (分頁)
      description: 分頁列出所有物資項目，可用 supply_id 過濾特定供應單；採 JSON-LD Collection 格式。
      parameters:
        - in: query
          name: supply_id
          schema: { type: string }
          description: 過濾指定供應單底下的項目
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 100 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyItemCollection' } } } }
    post:
      operationId: createSupplyItem
      summary: 建立物資項目
      description: 為既有供應單新增一筆物資項目；初始 recieved_count 預設為 0。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SupplyItemCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { type: object, properties: { id: { type: string, format: uuid } } } } } }
        '400': { description: 輸入錯誤 }
  /supply_items/{id}:
    get:
      operationId: getSupplyItem
      summary: 取得單一物資項目
      description: 依物資項目 UUID 取得其詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyItem' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteSupplyItem
      summary: 刪除物資項目
      description: 依 ID 刪除一筆物資項目資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchSupplyItem
      summary: 更新物資項目 (部分欄位) (停用)
      description: 部分更新物資項目欄位；若更新 recieved_count 則不得超過 total_count。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SupplyItemPatch' }
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyItem' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /supply_providers:
    get:
      operationId: listSupplyProviders
      summary: 取得物資提供站點清單 (分頁)
      description: 分頁列出所有物資提供站點，可用 supply_item_id 過濾特定物資項目的站點；採 JSON-LD Collection 格式。
      parameters:
        - in: query
          name: supply_item_id
          schema: { type: string }
          description: 過濾指定物資項目的站點
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyProviderCollection' } } } }
    post:
      operationId: createSupplyProvider
      summary: 建立物資提供站點
      description: 新增一筆物資提供站點資料，必須關聯到既有的物資項目 (supply_item_id)。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SupplyProviderCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyProvider' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 關聯的物資項目不存在 }
  /supply_providers/{id}:
    get:
      operationId: getSupplyProvider
      summary: 取得單一物資提供站點
      description: 依物資提供站點 UUID 取得其詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyProvider' } } } }
        '404': { description: 找不到 }
    patch:
      operationId: patchSupplyProvider
      summary: 更新物資提供站點 (部分欄位)
      description: 部分更新物資提供站點欄位；若更新 supply_item_id 則驗證其存在性，並自動更新 updated_at。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/SupplyProviderPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/SupplyProvider' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /places:
    get:
      operationId: listPlaces
      summary: 取得場所點清單 (分頁)
      description: 分頁列出所有場所點 (places)，可依狀態與類型過濾。
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: type
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/PlaceCollection' } } } }
    post:
      operationId: createPlace
      summary: 建立場所點
      description: 新增一筆通用場所點資料。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PlaceCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/Place' } } } }
        '400': { description: 輸入錯誤 }
  /places/{id}:
    get:
      operationId: getPlace
      summary: 取得單一場所點
      description: 依 ID 取得場所點詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/Place' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deletePlace
      summary: 刪除場所點
      description: 依 ID 刪除一筆場所點資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchPlace
      summary: 更新場所點 (部分欄位)
      description: 部分更新場所點欄位；僅更新提供的欄位，並自動更新 updated_at。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/PlacePatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/Place' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /requirements_hr:
    get:
      operationId: listRequirementsHR
      summary: 取得場所人力需求清單 (分頁)
      description: 分頁列出各場所的人力需求 (requirements_hr)，可依 place_id 與 required_type 過濾。
      parameters:
        - in: query
          name: place_id
          schema: { type: string }
          description: 指定隸屬的場所點 ID
        - in: query
          name: required_type
          schema: { type: string }
          description: 需求類型
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsHRCollection' } } } }
    post:
      operationId: createRequirementsHR
      summary: 建立場所人力需求
      description: 新增一筆隸屬於場所點的人力需求。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RequirementsHRCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsHR' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 指定的場所點不存在 }
  /requirements_hr/{id}:
    get:
      operationId: getRequirementsHR
      summary: 取得單一場所人力需求
      description: 依 ID 取得人力需求詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsHR' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteRequirementsHR
      summary: 刪除場所人力需求
      description: 依 ID 刪除一筆人力需求資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchRequirementsHR
      summary: 更新場所人力需求 (部分欄位)
      description: 部分更新人力需求欄位；僅更新提供的欄位，並自動更新 updated_at。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RequirementsHRPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsHR' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
  /requirements_supplies:
    get:
      operationId: listRequirementsSupplies
      summary: 取得場所物資需求清單 (分頁)
      description: 分頁列出各場所的物資需求 (requirements_supplies)，可依 place_id 與 required_type 過濾。
      parameters:
        - in: query
          name: place_id
          schema: { type: string }
          description: 指定隸屬的場所點 ID
        - in: query
          name: required_type
          schema: { type: string }
          description: 需求類型 (飲食/醫療用品/生活用品等)
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 500, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsSuppliesCollection' } } } }
    post:
      operationId: createRequirementsSupplies
      summary: 建立場所物資需求
      description: 新增一筆隸屬於場所點的物資需求。
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RequirementsSuppliesCreate' }
      responses:
        '201': { description: 建立成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsSupplies' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 指定的場所點不存在 }
  /requirements_supplies/{id}:
    get:
      operationId: getRequirementsSupplies
      summary: 取得單一場所物資需求
      description: 依 ID 取得物資需求詳細資訊。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: 成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsSupplies' } } } }
        '404': { description: 找不到 }
    delete:
      operationId: deleteRequirementsSupplies
      summary: 刪除場所物資需求
      description: 依 ID 刪除一筆物資需求資料。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: 刪除成功，無內容 }
        '404': { description: 找不到 }
    patch:
      operationId: patchRequirementsSupplies
      summary: 更新場所物資需求 (部分欄位)
      description: 部分更新物資需求欄位；僅更新提供的欄位，並自動更新 updated_at。
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/RequirementsSuppliesPatch' }
      responses:
        '200': { description: 更新成功, content: { application/json: { schema: { $ref: '#/components/schemas/RequirementsSupplies' } } } }
        '400': { description: 輸入錯誤 }
        '404': { description: 找不到 }
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    CollectionBase:
      type: object
      properties:
        '@context': { type: string, example: https://www.w3.org/ns/hydra/context.jsonld }
        '@type': { type: string, example: Collection }
        totalItems: { type: integer, description: 符合條件的總筆數 }
        limit: { type: integer, description: 本次回傳的筆數上限 }
        offset: { type: integer, description: 本次回傳的起始位置 }
        next: { type: string, nullable: true, description: 下一頁的連結 (若有) }
        previous: { type: string, nullable: true, description: 前一頁的連結 (若有) }
    VolunteerOrgCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/VolunteerOrganization' }
    VolunteerOrgPatch:
      type: object
      properties:
        registration_status: { type: string, nullable: true }
        organization_nature: { type: string, nullable: true }
        organization_name: { type: string, nullable: true }
        coordinator: { type: string, nullable: true }
        contact_info: { type: string, nullable: true }
        registration_method: { type: string, nullable: true }
        service_content: { type: string, nullable: true }
        meeting_info: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        image_url: { type: string, nullable: true }
    Shelter:
      type: object
      properties:
        id: { type: string, format: uuid }
        name: { type: string }
        location: { type: string }
        phone: { type: string }
        link: { type: string, nullable: true }
        status: { type: string, description: 'open, full, closed, temporary_closed' }
        capacity: { type: integer, nullable: true }
        current_occupancy: { type: integer, nullable: true }
        available_spaces: { type: integer, nullable: true }
        facilities: { type: array, items: { type: string } }
        contact_person: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        opening_hours: { type: string, nullable: true }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
    ShelterCreate:
      type: object
      required: [name, location, phone, status]
      properties:
        name: { type: string }
        location: { type: string }
        phone: { type: string }
        link: { type: string, nullable: true }
        status: { type: string }
        capacity: { type: integer, nullable: true }
        current_occupancy: { type: integer, nullable: true }
        available_spaces: { type: integer, nullable: true }
        facilities: { type: array, items: { type: string } }
        contact_person: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        opening_hours: { type: string, nullable: true }
    ShelterPatch:
      type: object
      properties:
        name: { type: string }
        location: { type: string }
        phone: { type: string }
        link: { type: string, nullable: true }
        status: { type: string }
        capacity: { type: integer, nullable: true }
        current_occupancy: { type: integer, nullable: true }
        available_spaces: { type: integer, nullable: true }
        facilities: { type: array, items: { type: string } }
        contact_person: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        opening_hours: { type: string, nullable: true }
    ShelterCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/Shelter' }
    MedicalStation:
      type: object
      properties:
        id: { type: string, format: uuid }
        station_type: { type: string, description: 'self_organized, fixed_point, shelter_medical' }
        name: { type: string }
        location: { type: string }
        detailed_address: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        contact_person: { type: string, nullable: true }
        status: { type: string, description: 'active, temporarily_closed, closed' }
        services: { type: array, items: { type: string } }
        operating_hours: { type: string, nullable: true }
        equipment: { type: array, items: { type: string } }
        medical_staff: { type: integer, nullable: true }
        daily_capacity: { type: integer, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        affiliated_organization: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        link: { type: string, nullable: true }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
    MedicalStationCreate:
      type: object
      required: [station_type, name, status]
      properties:
        station_type: { type: string }
        name: { type: string }
        location: { type: string }
        detailed_address: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        contact_person: { type: string, nullable: true }
        status: { type: string }
        services: { type: array, items: { type: string } }
        operating_hours: { type: string, nullable: true }
        equipment: { type: array, items: { type: string } }
        medical_staff: { type: integer, nullable: true }
        daily_capacity: { type: integer, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        affiliated_organization: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        link: { type: string, nullable: true }
    MedicalStationPatch:
      type: object
      properties:
        station_type: { type: string }
        name: { type: string }
        location: { type: string }
        detailed_address: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        contact_person: { type: string, nullable: true }
        status: { type: string }
        services: { type: array, items: { type: string } }
        operating_hours: { type: string, nullable: true }
        equipment: { type: array, items: { type: string } }
        medical_staff: { type: integer, nullable: true }
        daily_capacity: { type: integer, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        affiliated_organization: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        link: { type: string, nullable: true }
    MedicalStationCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/MedicalStation' }
    MentalHealthResource:
      type: object
      properties:
        id: { type: string, format: uuid, description: 資源唯一識別碼, example: 123e4567-e89b-12d3-a456-426614174000 }
        duration_type: { type: string, description: '服務期間類型: temporary=短期, long_term=長期, both=皆可', example: temporary }
        name: { type: string, description: 服務單位或計畫名稱, example: 光復災後心理支持團隊 }
        service_format: { type: string, description: '服務形式: onsite=現場, phone=電話, online=線上, hybrid=混合', example: onsite }
        service_hours: { type: string, description: 服務時間, example: 週一至週五 09:00-17:00 }
        contact_info: { type: string, description: 聯繫方式（電話 / 信箱 / 其他）, example: '0800-123-456 / support@example.org' }
        website_url: { type: string, nullable: true, description: 網址, example: https://example.org }
        target_audience: { type: array, description: 服務對象, items: { type: string }, example: ['災民','志工','救災人員'] }
        specialties: { type: array, description: 專業領域, items: { type: string }, example: ['創傷輔導','壓力管理','哀傷輔導'] }
        languages: { type: array, description: 提供語言服務, items: { type: string }, example: ['中文','台語','英文'] }
        is_free: { type: boolean, description: 是否免費, example: true }
        location: { type: string, nullable: true, description: 服務地點, example: 光復鄉公所二樓會議室 }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true, description: 緯度, example: 23.6639 }
            lng: { type: number, format: double, nullable: true, description: 經度, example: 121.4208 }
        status: { type: string, description: '服務狀態: active=服務中, paused=暫停, ended=已結束', example: active }
        capacity: { type: integer, nullable: true, description: 每日服務量上限, example: 20 }
        waiting_time: { type: string, nullable: true, description: 等候時間 (即時/需預約/天數), example: 需預約 }
        notes: { type: string, nullable: true, description: 備註, example: 提供個別諮商及團體輔導 }
        emergency_support: { type: boolean, description: 是否提供緊急支援, example: true }
        created_at: { type: integer, format: int64, description: 建立時間 (Unix timestamp), example: 1727664000 }
        updated_at: { type: integer, format: int64, description: 更新時間 (Unix timestamp), example: 1727750400 }
    MentalHealthResourceCreate:
      type: object
      required: [duration_type, name, service_format, service_hours, contact_info, is_free, status, emergency_support]
      properties:
        duration_type: { type: string, description: 服務期間類型, example: temporary }
        name: { type: string, description: 服務單位或計畫名稱 }
        service_format: { type: string, description: 服務形式, example: onsite }
        service_hours: { type: string, description: 服務時間, example: 週一至週五 09:00-17:00 }
        contact_info: { type: string, description: 聯繫方式, example: '0800-123-456 / support@example.org' }
        website_url: { type: string, nullable: true, description: 網址 }
        target_audience: { type: array, items: { type: string }, description: 服務對象 }
        specialties: { type: array, items: { type: string }, description: 專業領域 }
        languages: { type: array, items: { type: string }, description: 提供語言服務 }
        is_free: { type: boolean, description: 是否免費 }
        location: { type: string, nullable: true, description: 服務地點 }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true, description: 緯度 }
            lng: { type: number, format: double, nullable: true, description: 經度 }
        status: { type: string, description: 服務狀態 }
        capacity: { type: integer, nullable: true, description: 每日服務量上限 }
        waiting_time: { type: string, nullable: true, description: 等候時間 }
        notes: { type: string, nullable: true, description: 備註 }
        emergency_support: { type: boolean, description: 是否提供緊急支援 }
    MentalHealthResourcePatch:
      type: object
      properties:
        duration_type: { type: string, description: 服務期間類型 }
        name: { type: string, description: 服務單位或計畫名稱 }
        service_format: { type: string, description: 服務形式 }
        service_hours: { type: string, description: 服務時間 }
        contact_info: { type: string, description: 聯繫方式 }
        website_url: { type: string, nullable: true, description: 網址 }
        target_audience: { type: array, items: { type: string }, description: 服務對象 }
        specialties: { type: array, items: { type: string }, description: 專業領域 }
        languages: { type: array, items: { type: string }, description: 提供語言服務 }
        is_free: { type: boolean, description: 是否免費 }
        location: { type: string, nullable: true, description: 服務地點 }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true, description: 緯度 }
            lng: { type: number, format: double, nullable: true, description: 經度 }
        status: { type: string, description: 服務狀態 }
        capacity: { type: integer, nullable: true, description: 每日服務量上限 }
        waiting_time: { type: string, nullable: true, description: 等候時間 }
        notes: { type: string, nullable: true, description: 備註 }
        emergency_support: { type: boolean, description: 是否提供緊急支援 }
    MentalHealthResourceCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/MentalHealthResource' }
    Accommodation:
      type: object
      properties:
        id: { type: string, format: uuid }
        township: { type: string }
        name: { type: string }
        has_vacancy: { type: string, description: 'available, full, unknown, need_confirm' }
        available_period: { type: string }
        restrictions: { type: string, nullable: true }
        contact_info: { type: string }
        room_info: { type: string, nullable: true }
        address: { type: string }
        pricing: { type: string }
        info_source: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        capacity: { type: integer, nullable: true }
        status: { type: string, description: 'active, paused, ended' }
        registration_method: { type: string, nullable: true }
        facilities: { type: array, items: { type: string } }
        distance_to_disaster_area: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
    AccommodationCreate:
      type: object
      required: [township, name, has_vacancy, available_period, contact_info, address, pricing, status]
      properties:
        township: { type: string }
        name: { type: string }
        has_vacancy: { type: string }
        available_period: { type: string }
        restrictions: { type: string, nullable: true }
        contact_info: { type: string }
        room_info: { type: string, nullable: true }
        address: { type: string }
        pricing: { type: string }
        info_source: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        capacity: { type: integer, nullable: true }
        status: { type: string }
        registration_method: { type: string, nullable: true }
        facilities: { type: array, items: { type: string } }
        distance_to_disaster_area: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    AccommodationPatch:
      type: object
      properties:
        township: { type: string }
        name: { type: string }
        has_vacancy: { type: string }
        available_period: { type: string }
        restrictions: { type: string, nullable: true }
        contact_info: { type: string }
        room_info: { type: string, nullable: true }
        address: { type: string }
        pricing: { type: string }
        info_source: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        capacity: { type: integer, nullable: true }
        status: { type: string }
        registration_method: { type: string, nullable: true }
        facilities: { type: array, items: { type: string } }
        distance_to_disaster_area: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    AccommodationCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/Accommodation' }
    ShowerStation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 洗澡點唯一識別碼
          example: 123e4567-e89b-12d3-a456-426614174002
          readOnly: true
        name:
          type: string
          description: 名稱
          example: 光復國小
        address:
          type: string
          description: 地址
          example: 花蓮縣光復鄉中山路三段75號
        phone:
          type: string
          nullable: true
          description: 聯絡電話
          example: 03-8702880
        facility_type:
          type: string
          description: 設施類型 (mobile_shower, coin_operated, regular_bathroom)
          example: mobile_shower
        time_slots:
          type: string
          description: 提供洗澡的時段 (可為多段，以逗號或換行分隔)
          example: 上午10:00-11:30, 下午15:30-17:30
        gender_schedule:
          type: object
          nullable: true
          description: 性別使用時段 (male / female 對應陣列時段)
          properties:
            male:
              type: array
              items: { type: string }
              example: ["10:00-10:30"]
            female:
              type: array
              items: { type: string }
              example: ["10:30-11:30"]
        available_period:
          type: string
          description: 開放期間
          example: 即日起至10/3
        capacity:
          type: integer
          nullable: true
          description: 同時可容納人數
          example: 5
        is_free:
          type: boolean
          description: 是否免費
          example: true
        pricing:
          type: string
          nullable: true
          description: 費用說明
          example: 投幣式，每次10元
        notes:
          type: string
          nullable: true
          description: 備註
          example: 多座行動沐浴車，僅開放廁所+浴室
        info_source:
          type: string
          nullable: true
          description: 資料來源
          example: https://example.com/post/123
        status:
          type: string
          description: 營運狀態 (active, temporarily_closed, ended)
          example: active
        facilities:
          type: array
          items: { type: string }
          description: 額外設施
          example: ["吹風機","毛巾","盥洗用品"]
        distance_to_guangfu:
          type: string
          nullable: true
          description: 距光復車程
          example: 20分鐘
        requires_appointment:
          type: boolean
          description: 是否需預約
          example: false
        contact_method:
          type: string
          nullable: true
          description: 預約方式
          example: "LINE: @wowhostel"
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        created_at:
          type: integer
          format: int64
          description: 建立時間 (Unix timestamp 秒)
          example: 1727664000
          readOnly: true
        updated_at:
          type: integer
          format: int64
          description: 更新時間 (Unix timestamp 秒)
          example: 1727750400
          readOnly: true
    ShowerStationCreate:
      type: object
      required: [name, address, facility_type, time_slots, available_period, is_free, status, requires_appointment]
      properties:
        name: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        facility_type: { type: string }
        time_slots: { type: string }
        gender_schedule:
          type: object
          nullable: true
          properties:
            male: { type: array, items: { type: string } }
            female: { type: array, items: { type: string } }
        available_period: { type: string }
        capacity: { type: integer, nullable: true }
        is_free: { type: boolean }
        pricing: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        info_source: { type: string, nullable: true }
        status: { type: string }
        facilities: { type: array, items: { type: string } }
        distance_to_guangfu: { type: string, nullable: true }
        requires_appointment: { type: boolean }
        contact_method: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    ShowerStationPatch:
      type: object
      properties:
        name: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        facility_type: { type: string }
        time_slots: { type: string }
        gender_schedule:
          type: object
          nullable: true
          properties:
            male: { type: array, items: { type: string } }
            female: { type: array, items: { type: string } }
        available_period: { type: string }
        capacity: { type: integer, nullable: true }
        is_free: { type: boolean }
        pricing: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        info_source: { type: string, nullable: true }
        status: { type: string }
        facilities: { type: array, items: { type: string } }
        distance_to_guangfu: { type: string, nullable: true }
        requires_appointment: { type: boolean }
        contact_method: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    ShowerStationCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/ShowerStation' }
    WaterRefillStation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 裝水點唯一識別碼
          example: 123e4567-e89b-12d3-a456-426614174001
          readOnly: true
        name:
          type: string
          description: 地點名稱
          example: 光復國小裝水站
        address:
          type: string
          description: 地址
          example: 花蓮縣光復鄉中山路三段75號
        phone:
          type: string
          nullable: true
          description: 聯絡電話
          example: 03-8701129
        water_type:
          type: string
          description: 水源類型 (drinking_water, bottled_water, filtered_water)
          example: drinking_water
        opening_hours:
          type: string
          description: 開放時間
          example: 24小時
        is_free:
          type: boolean
          description: 是否免費
          example: true
        container_required:
          type: string
          nullable: true
          description: 容器要求
          example: 自備容器
        daily_capacity:
          type: integer
          nullable: true
          description: 每日供水量 (公升)
          example: 500
        status:
          type: string
          description: 營運狀態 (active, temporarily_unavailable, ended)
          example: active
        water_quality:
          type: string
          nullable: true
          description: 水質狀態 (tested, safe, needs_boiling)
          example: tested
        facilities:
          type: array
          items: { type: string }
          description: 額外設施
          example: ["飲水機","水龍頭","瓶裝水發放"]
        accessibility:
          type: boolean
          description: 是否具備無障礙設施
          example: true
        distance_to_disaster_area:
          type: string
          nullable: true
          description: 距災區距離
          example: 5分鐘車程
        notes:
          type: string
          nullable: true
          description: 備註
          example: 提供冷熱水, 請自備容器
        info_source:
          type: string
          nullable: true
          description: 資料來源
          example: 鄉公所公告
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        created_at:
          type: integer
          format: int64
          description: 建立時間 (Unix timestamp 秒)
          example: 1727664000
          readOnly: true
        updated_at:
          type: integer
          format: int64
          description: 更新時間 (Unix timestamp 秒)
          example: 1727750400
          readOnly: true
    WaterRefillStationCreate:
      type: object
      required: [name, address, water_type, opening_hours, is_free, status, accessibility]
      properties:
        name: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        water_type: { type: string }
        opening_hours: { type: string }
        is_free: { type: boolean }
        container_required: { type: string, nullable: true }
        daily_capacity: { type: integer, nullable: true }
        status: { type: string }
        water_quality: { type: string, nullable: true }
        facilities: { type: array, items: { type: string } }
        accessibility: { type: boolean }
        distance_to_disaster_area: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        info_source: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    WaterRefillStationPatch:
      type: object
      properties:
        name: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        water_type: { type: string }
        opening_hours: { type: string }
        is_free: { type: boolean }
        container_required: { type: string, nullable: true }
        daily_capacity: { type: integer, nullable: true }
        status: { type: string }
        water_quality: { type: string, nullable: true }
        facilities: { type: array, items: { type: string } }
        accessibility: { type: boolean }
        distance_to_disaster_area: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        info_source: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    WaterRefillStationCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/WaterRefillStation' }
    RequestLog:
      type: object
      properties:
        id: { type: string, format: uuid }
        method: { type: string }
        path: { type: string }
        query: { type: string, nullable: true }
        ip: { type: string }
        headers: { type: object, additionalProperties: { type: string } }
        status_code: { type: integer }
        error: { type: string, nullable: true }
        duration_ms: { type: integer }
        created_at: { type: integer, format: int64 }
    RequestLogCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/RequestLog' }
    Restroom:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 廁所點唯一識別碼
          example: 123e4567-e89b-12d3-a456-426614174000
          readOnly: true
        name:
          type: string
          description: 地點名稱
          example: 光復國小臨時廁所
        address:
          type: string
          description: 地址
          example: 花蓮縣光復鄉中山路三段75號
        phone:
          type: string
          nullable: true
          description: 聯絡電話
          example: 03-8701129
        facility_type:
          type: string
          description: 設施類型 (mobile_toilet, permanent_toilet, public_restroom)
          example: mobile_toilet
        opening_hours:
          type: string
          description: 開放時間
          example: 24小時
        is_free:
          type: boolean
          description: 是否免費
          example: true
        male_units:
          type: integer
          nullable: true
          description: 男廁數量
          example: 3
        female_units:
          type: integer
          nullable: true
          description: 女廁數量
          example: 5
        unisex_units:
          type: integer
          nullable: true
          description: 無性別廁所數量
          example: 2
        accessible_units:
          type: integer
          nullable: true
          description: 無障礙廁所數量
          example: 1
        has_water:
          type: boolean
          description: 是否有供水
          example: true
        has_lighting:
          type: boolean
          description: 是否有照明
          example: true
        status:
          type: string
          description: 營運狀態 (active, maintenance, out_of_service)
          example: active
        cleanliness:
          type: string
          nullable: true
          description: 清潔狀態 (clean, needs_cleaning, under_cleaning)
          example: clean
        last_cleaned:
          type: integer
          format: int64
          nullable: true
          description: 最後清潔時間 (Unix timestamp 秒)
          example: 1727664000
        facilities:
          type: array
          description: 額外設施
          items: { type: string }
          example: ["洗手台","衛生紙","洗手乳","烘手機"]
        distance_to_disaster_area:
          type: string
          nullable: true
          description: 距災區距離
          example: 5分鐘步行
        notes:
          type: string
          nullable: true
          description: 備註
          example: 定時清潔，請保持整潔
        info_source:
          type: string
          nullable: true
          description: 資料來源
          example: 環保局
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
        created_at:
          type: integer
          format: int64
          description: 建立時間 (Unix timestamp 秒)
          example: 1727664000
          readOnly: true
        updated_at:
          type: integer
          format: int64
          description: 更新時間 (Unix timestamp 秒)
          example: 1727750400
          readOnly: true
    RestroomCreate:
      type: object
      required: [name, address, facility_type, opening_hours, is_free, has_water, has_lighting, status]
      properties:
        name: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        facility_type: { type: string }
        opening_hours: { type: string }
        is_free: { type: boolean }
        male_units: { type: integer, nullable: true }
        female_units: { type: integer, nullable: true }
        unisex_units: { type: integer, nullable: true }
        accessible_units: { type: integer, nullable: true }
        has_water: { type: boolean }
        has_lighting: { type: boolean }
        status: { type: string }
        cleanliness: { type: string, nullable: true }
        last_cleaned: { type: integer, format: int64, nullable: true }
        facilities: { type: array, items: { type: string } }
        distance_to_disaster_area: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        info_source: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    RestroomPatch:
      type: object
      properties:
        name: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        facility_type: { type: string }
        opening_hours: { type: string }
        is_free: { type: boolean }
        male_units: { type: integer, nullable: true }
        female_units: { type: integer, nullable: true }
        unisex_units: { type: integer, nullable: true }
        accessible_units: { type: integer, nullable: true }
        has_water: { type: boolean }
        has_lighting: { type: boolean }
        status: { type: string }
        cleanliness: { type: string, nullable: true }
        last_cleaned: { type: integer, format: int64, nullable: true }
        facilities: { type: array, items: { type: string } }
        distance_to_disaster_area: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        info_source: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          properties:
            lat: { type: number, format: double, nullable: true }
            lng: { type: number, format: double, nullable: true }
    RestroomCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/Restroom' }
    HumanResource:
      type: object
      properties:
        id:
          type: string
          description: 需求唯一識別碼
          example: hr-26f95ee9-e920-4f44-95a2-d40ded631893
          readOnly: true
        org:
          type: string
          description: 單位名稱
          example: 吉安鄉志工服務隊
        address:
          type: string
          description: 工作地點地址
          example: 花蓮縣吉安鄉中山路三段100號
        phone:
          type: string
          description: 聯絡電話
          example: 038-123456
        status:
          type: string
          description: 需求狀態 (active, completed, cancelled)
          example: active
        is_completed:
          type: boolean
          description: 是否已完成
          example: false
        has_medical:
          type: boolean
          nullable: true
          description: 是否屬於醫療人力需求
          example: false
        pii_date:
          type: integer
          format: int64
          nullable: true
          description: 個資同意時間 (Unix Timestamp)
          example: 1759164503
        created_at:
          type: integer
          format: int64
          description: 建立時間 (Unix Timestamp 秒)
          example: 1759164503
          readOnly: true
        updated_at:
          type: integer
          format: int64
          description: 更新時間 (Unix Timestamp 秒)
          example: 1759164503
          readOnly: true
        role_name:
          type: string
          description: 人力角色名稱
          example: 搬運志工
        role_type:
          type: string
          description: 人力類型 (一般志工, 醫療人員, 行政支援, 司機, 安全維護, 其他)
          example: 一般志工
        skills:
          type: array
          items: { type: string }
          description: 所需技能或資格
          example: ["搬運","CPR","急救證照"]
        certifications:
          type: array
          items: { type: string }
          description: 必要證照
          example: ["急救員證照"]
        experience_level:
          type: string
          nullable: true
          description: 經驗需求 (level_1, level_2, level_3)
          example: level_1
        language_requirements:
          type: array
          items: { type: string }
          description: 語言需求
          example: ["中文","英文"]
        headcount_need:
          type: integer
          description: 需求人數
          example: 30
        headcount_got:
          type: integer
          description: 已到位人數
          example: 18
        headcount_unit:
          type: string
          nullable: true
          description: 人數單位
          example: 人
        role_status:
          type: string
          description: 人力填補狀態 (completed, pending, partial)
          example: partial
        shift_start_ts:
          type: integer
          format: int64
          nullable: true
          description: 班次開始時間 (Unix Timestamp 秒)
          example: 1759164503
        shift_end_ts:
          type: integer
          format: int64
          nullable: true
          description: 班次結束時間 (Unix Timestamp 秒)
          example: 1759168103
        shift_notes:
          type: string
          nullable: true
          description: 班次備註
          example: 需自備手套與安全鞋
        assignment_timestamp:
          type: integer
          format: int64
          nullable: true
          description: 派工/報到時間 (Unix Timestamp 秒)
          example: 1759164503
        assignment_count:
          type: integer
          nullable: true
          description: 本次派工人數
          example: 10
        assignment_notes:
          type: string
          nullable: true
          description: 派工備註
          example: 到現場與組長報到
        total_roles_in_request:
          type: integer
          nullable: true
          description: 此需求總人力角色數
          example: 3
          readOnly: true
        completed_roles_in_request:
          type: integer
          nullable: true
          description: 此需求已完成人力角色數
          example: 2
          readOnly: true
        pending_roles_in_request:
          type: integer
          nullable: true
          description: 此需求待完成人力角色數
          example: 1
          readOnly: true
        total_requests:
          type: integer
          nullable: true
          description: 系統總人力需求數 (統計值)
          example: 150
          readOnly: true
        active_requests:
          type: integer
          nullable: true
          description: 系統進行中人力需求數 (統計值)
          example: 45
          readOnly: true
        completed_requests:
          type: integer
          nullable: true
          description: 系統已完成人力需求數 (統計值)
          example: 100
          readOnly: true
        cancelled_requests:
          type: integer
          nullable: true
          description: 系統已取消人力需求數 (統計值)
          example: 5
          readOnly: true
        total_roles:
          type: integer
          nullable: true
          description: 系統總人力角色項目數 (統計值)
          example: 500
          readOnly: true
        completed_roles:
          type: integer
          nullable: true
          description: 系統已完成人力角色數 (統計值)
          example: 300
          readOnly: true
        pending_roles:
          type: integer
          nullable: true
          description: 系統待完成人力角色數 (統計值)
          example: 200
          readOnly: true
        urgent_requests:
          type: integer
          nullable: true
          description: 系統緊急人力需求數 (統計值)
          example: 12
          readOnly: true
        medical_requests:
          type: integer
          nullable: true
          description: 系統醫療人力需求數 (統計值)
          example: 25
          readOnly: true
    HumanResourceCreate:
      type: object
      required: [org,address,status,is_completed,role_name,role_type,headcount_need,headcount_got,role_status]
      properties:
        org: { type: string }
        address: { type: string }
        phone: { type: string, nullable: true }
        status: { type: string }
        is_completed: { type: boolean }
        has_medical: { type: boolean, nullable: true }
        pii_date: { type: integer, format: int64, nullable: true, description: 個資同意時間 (Unix Timestamp) }
        valid_pin: { type: string, nullable: true, description: 編輯用6碼PIN；未提供將自動產生，不會在回應中回傳, minLength: 6, maxLength: 6 }
        role_name: { type: string }
        role_type: { type: string }
        skills: { type: array, items: { type: string } }
        certifications: { type: array, items: { type: string } }
        experience_level: { type: string, nullable: true }
        language_requirements: { type: array, items: { type: string } }
        headcount_need: { type: integer }
        headcount_got: { type: integer }
        headcount_unit: { type: string, nullable: true }
        role_status: { type: string }
        shift_start_ts: { type: integer, format: int64, nullable: true }
        shift_end_ts: { type: integer, format: int64, nullable: true }
        shift_notes: { type: string, nullable: true }
        assignment_timestamp: { type: integer, format: int64, nullable: true }
        assignment_count: { type: integer, nullable: true }
        assignment_notes: { type: string, nullable: true }
    HumanResourcePatch:
      type: object
      properties:
        valid_pin:
          type: string
          nullable: true
          description: 編輯驗證用6碼PIN；若紀錄尚未有PIN且本次未提供，系統會自動產生
          minLength: 6
          maxLength: 6
        org: { type: string }
        address: { type: string }
        phone: { type: string }
        status: { type: string }
        is_completed: { type: boolean }
        has_medical: { type: boolean }
        pii_date: { type: integer, format: int64, nullable: true, description: 個資同意時間 (Unix Timestamp) }
        role_name: { type: string }
        role_type: { type: string }
        skills: { type: array, items: { type: string } }
        certifications: { type: array, items: { type: string } }
        experience_level: { type: string }
        language_requirements: { type: array, items: { type: string } }
        headcount_need: { type: integer }
        headcount_got: { type: integer }
        headcount_unit: { type: string }
        role_status: { type: string }
        shift_start_ts: { type: integer, format: int64 }
        shift_end_ts: { type: integer, format: int64 }
        shift_notes: { type: string }
        assignment_timestamp: { type: integer, format: int64 }
        assignment_count: { type: integer }
        assignment_notes: { type: string }
        total_roles_in_request: { type: integer }
        completed_roles_in_request: { type: integer }
        pending_roles_in_request: { type: integer }
        total_requests: { type: integer }
        active_requests: { type: integer }
        completed_requests: { type: integer }
        cancelled_requests: { type: integer }
        total_roles: { type: integer }
        completed_roles: { type: integer }
        pending_roles: { type: integer }
        urgent_requests: { type: integer }
        medical_requests: { type: integer }
    HumanResourceCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/HumanResource' }
    VolunteerOrganization:
      type: object
      properties:
        id: { type: string, format: uuid }
        organization_name: { type: string }
        registration_status: { type: string, nullable: true }
        organization_nature: { type: string, nullable: true }
        coordinator: { type: string, nullable: true }
        contact_info: { type: string, nullable: true }
        registration_method: { type: string, nullable: true }
        service_content: { type: string, nullable: true }
        meeting_info: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        image_url: { type: string, nullable: true }
    VolunteerOrgCreate:
      type: object
      required: [organization_name]
      properties:
        organization_name: { type: string }
        registration_status: { type: string, nullable: true }
        organization_nature: { type: string, nullable: true }
        coordinator: { type: string, nullable: true }
        contact_info: { type: string, nullable: true }
        registration_method: { type: string, nullable: true }
        service_content: { type: string, nullable: true }
        meeting_info: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        image_url: { type: string, nullable: true }
    Supply:
      type: object
      properties:
        id: { type: string, format: uuid }
        name: { type: string, nullable: true }
        address: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        pii_date: { type: integer, format: int64, nullable: true, description: 個資同意時間 (Unix Timestamp) }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
        supplies:
          type: array
          description: 供應單全部物資項目 (可能為空陣列)
          items: { $ref: '#/components/schemas/SupplyItem' }
    SupplyCreate:
      type: object
      properties:
        name: { type: string, nullable: true }
        address: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        pii_date: { type: integer, format: int64, nullable: true, description: 個資同意時間 (Unix Timestamp) }
        supplies:
          type: object
          nullable: true
          description: 同時建立的第一個物資項目
          properties:
            tag: { type: string, nullable: true }
            name: { type: string, nullable: true }
            recieved_count: { type: integer, description: '前端拼字 (received_count)；可省略預設 0' }
            total_count: { type: integer }
            unit: { type: string, nullable: true }
    SupplyPatch:
      type: object
      properties:
        name: { type: string, nullable: true }
        address: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        pii_date: { type: integer, format: int64, nullable: true, description: 個資同意時間 (Unix Timestamp) }
    SupplyCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/Supply' }
    SupplyItem:
      type: object
      properties:
        id: { type: string, format: uuid }
        supply_id: { type: string, format: uuid }
        tag: { type: string, nullable: true }
        name: { type: string, nullable: true }
        recieved_count: { type: integer }
        total_count: { type: integer }
        unit: { type: string, nullable: true }
    SupplyItemCreate:
      type: object
      required: [supply_id,total_count]
      properties:
        supply_id: { type: string }
        tag: { type: string, nullable: true }
        name: { type: string, nullable: true }
        total_count: { type: integer }
        unit: { type: string, nullable: true }
    SupplyItemPatch:
      type: object
      properties:
        tag: { type: string, nullable: true }
        name: { type: string, nullable: true }
        recieved_count: { type: integer }
        total_count: { type: integer }
        unit: { type: string, nullable: true }
    SupplyItemCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/SupplyItem' }
    SupplyProvider:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        phone: { type: string }
        supply_item_id: { type: string }
        address: { type: string }
        notes: { type: string, nullable: true }
        provide_count: { type: integer }
        provide_unit: { type: string, nullable: true }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
    SupplyProviderCreate:
      type: object
      required: [name,phone,supply_item_id,address,provide_count]
      properties:
        name: { type: string }
        phone: { type: string }
        supply_item_id: { type: string }
        address: { type: string }
        notes: { type: string, nullable: true }
        provide_count: { type: integer }
        provide_unit: { type: string, nullable: true }
    SupplyProviderPatch:
      type: object
      properties:
        name: { type: string, nullable: true }
        phone: { type: string, nullable: true }
        supply_item_id: { type: string, nullable: true }
        address: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        provide_count: { type: integer, nullable: true }
        provide_unit: { type: string, nullable: true }
    SupplyProviderCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/SupplyProvider' }
    Place:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        address: { type: string }
        address_description: { type: string, nullable: true }
        coordinates:
          type: object
          additionalProperties: true
        type:
          type: string
          description: 類型
          enum: ['醫療','加水','廁所','洗澡','避難','住宿','物資','心理援助']
        sub_type: { type: string, nullable: true }
        info_sources: { type: array, items: { type: string } }
        verified_at: { type: integer, format: int64, nullable: true }
        website_url: { type: string, nullable: true }
        status:
          type: string
          description: 狀態
          enum: ['開放','暫停','關閉']
        resources: { type: array, items: { type: object, additionalProperties: true } }
        open_date: { type: string, nullable: true }
        end_date: { type: string, nullable: true }
        open_time: { type: string, nullable: true }
        end_time: { type: string, nullable: true }
        contact_name: { type: string }
        contact_phone: { type: string }
        notes: { type: string, nullable: true }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
    PlaceCreate:
      type: object
      required: [name, address, coordinates, type, status, contact_name, contact_phone]
      properties:
        name: { type: string }
        address: { type: string }
        address_description: { type: string, nullable: true }
        coordinates:
          type: object
          description: 經緯度形狀, 例如 {"type":"Point","coordinates":[121.5,24.1]} 或多邊形/線段等
          additionalProperties: true
        type:
          type: string
          enum: ['醫療','加水','廁所','洗澡','避難','住宿','物資','心理援助']
        sub_type: { type: string, nullable: true }
        info_sources: { type: array, items: { type: string } }
        verified_at: { type: integer, format: int64, nullable: true }
        website_url: { type: string, nullable: true }
        status:
          type: string
          enum: ['開放','暫停','關閉']
        resources: { type: array, items: { type: object, additionalProperties: true } }
        open_date: { type: string, nullable: true }
        end_date: { type: string, nullable: true }
        open_time: { type: string, nullable: true }
        end_time: { type: string, nullable: true }
        contact_name: { type: string }
        contact_phone: { type: string }
        notes: { type: string, nullable: true }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
    PlacePatch:
      type: object
      properties:
        name: { type: string, nullable: true }
        address: { type: string, nullable: true }
        address_description: { type: string, nullable: true }
        coordinates:
          type: object
          nullable: true
          additionalProperties: true
        type: { type: string, nullable: true, enum: ['醫療','加水','廁所','洗澡','避難','住宿','物資','心理援助'] }
        sub_type: { type: string, nullable: true }
        info_sources: { type: array, items: { type: string } }
        verified_at: { type: integer, format: int64, nullable: true }
        website_url: { type: string, nullable: true }
        status: { type: string, nullable: true, enum: ['開放','暫停','關閉'] }
        resources: { type: array, items: { type: object, additionalProperties: true } }
        open_date: { type: string, nullable: true }
        end_date: { type: string, nullable: true }
        open_time: { type: string, nullable: true }
        end_time: { type: string, nullable: true }
        contact_name: { type: string, nullable: true }
        contact_phone: { type: string, nullable: true }
        notes: { type: string, nullable: true }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
    PlaceCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/Place' }
    RequirementsHR:
      type: object
      properties:
        id: { type: string }
        place_id: { type: string }
        required_type:
          type: string
          enum: ['一般志工','專業技術','清潔整理','醫療照護','後勤支援','其他']
        name: { type: string }
        unit: { type: string }
        require_count: { type: integer }
        received_count: { type: integer }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
    RequirementsHRCreate:
      type: object
      required: [place_id, required_type, name, unit, require_count]
      properties:
        place_id: { type: string }
        required_type: { type: string, enum: ['一般志工','專業技術','清潔整理','醫療照護','後勤支援','其他'] }
        name: { type: string }
        unit: { type: string }
        require_count: { type: integer }
        received_count: { type: integer, default: 0 }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
    RequirementsHRPatch:
      type: object
      properties:
        place_id: { type: string, nullable: true }
        required_type: { type: string, nullable: true, enum: ['一般志工','專業技術','清潔整理','醫療照護','後勤支援','其他'] }
        name: { type: string, nullable: true }
        unit: { type: string, nullable: true }
        require_count: { type: integer, nullable: true }
        received_count: { type: integer, nullable: true }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
    RequirementsHRCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/RequirementsHR' }
    RequirementsSupplies:
      type: object
      properties:
        id: { type: string }
        place_id: { type: string }
        required_type: { type: string, description: 需求類型：飲食/醫療用品/生活用品等 }
        name: { type: string }
        unit: { type: string }
        require_count: { type: integer }
        received_count: { type: integer }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        created_at: { type: integer, format: int64 }
        updated_at: { type: integer, format: int64 }
        additional_info: { type: object, additionalProperties: true }
    RequirementsSuppliesCreate:
      type: object
      required: [place_id, required_type, name, unit, require_count]
      properties:
        place_id: { type: string }
        required_type: { type: string, description: 需求類型：飲食/醫療用品/生活用品等 }
        name: { type: string }
        unit: { type: string }
        require_count: { type: integer }
        received_count: { type: integer, default: 0 }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
    RequirementsSuppliesPatch:
      type: object
      properties:
        place_id: { type: string, nullable: true }
        required_type: { type: string, nullable: true }
        name: { type: string, nullable: true }
        unit: { type: string, nullable: true }
        require_count: { type: integer, nullable: true }
        received_count: { type: integer, nullable: true }
        tags: { type: array, items: { type: object, additionalProperties: true } }
        additional_info: { type: object, additionalProperties: true }
    RequirementsSuppliesCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/RequirementsSupplies' }
    Report:
      type: object
      properties:
        id:
          type: string
          description: 事件唯一識別碼
          example: incident-uuid-001
          readOnly: true
        name:
          type: string
          description: 回報點名稱
          example: 光復國小積水
        location_type:
          type: string
          description: 回報點類別
          example: 加水站
        location_id:
          type: string
          description: 回報問題點的ID (可對應既有資源，例如 water_refill_stations / restrooms 等)
          example: water-uuid-001
        reason:
          type: string
          description: 事件描述
          example: 校園操場積水深度約50公分
        notes:
          type: string
          nullable: true
          description: 其他資訊
          example: 今天星期三
        status:
          type: string
          description: 是否解決 (true/false 以字串表示)
          example: "false"
        created_at:
          type: integer
          format: int64
          description: 建立時間 (Unix timestamp 秒)
          example: 1727664000
          readOnly: true
        updated_at:
          type: integer
          format: int64
          description: 更新時間 (Unix timestamp 秒)
          example: 1727750400
          readOnly: true
    ReportCreate:
      type: object
      required: [name,location_type,reason,status,location_id]
      properties:
        name: { type: string }
        location_type: { type: string }
        reason: { type: string }
        notes: { type: string, nullable: true }
        status: { type: string, description: '是否解決 (true/false 字串)' }
        location_id: { type: string, description: 回報問題點的ID, example: water-uuid-001 }
    ReportPatch:
      type: object
      properties:
        name: { type: string }
        location_type: { type: string }
        reason: { type: string }
        notes: { type: string, nullable: true }
        status: { type: string }
        location_id: { type: string }
    ReportCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/Report' }
    SpamResult:
      type: object
      properties:
        id:
          type: string
          description: 檢測結果唯一識別碼
          example: llm-bot-uuid-001
          readOnly: true
        target_id:
          type: string
          description: 目標資料的唯一識別碼
          example: human-resource-uuid-001
        target_type:
          type: string
          description: 目標表格名稱 (如 human_resources, supplies)
          example: supplies
        target_data:
          type: object
          description: 目標原始資料 (JSONB)
          additionalProperties: true
          example: {"org":"光復志工","address":"光復鄉"}
        is_spam:
          type: boolean
          description: LLM 判斷是否為垃圾訊息/異常內容
          example: true
        judgment:
          type: string
          description: LLM 判斷的理由
          example: 警告語氣，可能為惡意
        validated_at:
          type: integer
          format: int64
          description: LLM 驗證時間 (Unix timestamp 秒)
          example: 1727750400
          readOnly: true
    SpamResultCreate:
      type: object
      required: [id,target_id,target_type,target_data,judgment]
      properties:
        id: { type: string, description: 自訂 ID }
        target_id: { type: string, description: 目標資料 ID }
        target_type: { type: string, description: 目標表格名稱 }
        target_data: { type: object, additionalProperties: true, description: 目標原始資料 }
        is_spam: { type: boolean, default: false, description: 是否為垃圾訊息 }
        judgment: { type: string, description: 判斷理由 }
    SpamResultPatch:
      type: object
      properties:
        is_spam: { type: boolean }
        judgment: { type: string }
        target_data: { type: object, additionalProperties: true }
    SpamResultCollection:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            member:
              type: array
              items: { $ref: '#/components/schemas/SpamResult' }
